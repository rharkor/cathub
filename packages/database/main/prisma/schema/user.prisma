enum Sex {
    MALE
    FEMALE
}

enum Role {
    USER
    ADMIN
}

model User {
    id               String  @id @default(cuid())
    username         String
    email            String  @unique
    password         String
    profilePictureId String? @unique
    profilePicture   File?   @relation(fields: [profilePictureId], references: [id], onDelete: SetNull)
    role             Role    @default(USER)

    createdAt     DateTime        @default(now())
    updatedAt     DateTime        @updatedAt
    FileUploading FileUploading[]

    //* Cathub
    isCathub    Boolean                                @default(false)
    sex         Sex?
    description String?
    price       Int?
    age         Int?
    location    Unsupported("geography(Point, 4326)")?

    posts        Post[]
    postLikes    PostLike[]
    postDislikes PostDislike[]
    postComments PostComment[]
    likes        UserProfileLike[] @relation("user")
    likedUsers   UserProfileLike[] @relation("likedUser")
}

model UserProfileLike {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())

    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, name: "user")
    userId String

    likedUser   User   @relation(fields: [likedUserId], references: [id], onDelete: Cascade, name: "likedUser")
    likedUserId String
}
